substitutions:
  SCREEN_MAIN: master
  SCREEN_ROOMS: rooms
  SCREEN_LIGHTS: lights
  SCREEN_THERMOSTAT: thermostat
  SCREEN_TEMPS: temperatures

esphome:
  name: ha-deck-cyd
  friendly_name: HA_Deck_CYD
  libraries:
    - SPI
    - Wire
    - XPT2046_Touchscreen=https://github.com/PaulStoffregen/XPT2046_Touchscreen.git#v1.4

esp32:
  board: esp32dev
  framework:
    type: arduino

logger:

api:

#ota:
#  password: "Passwd"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

external_components:
  #- source:
  #    type: git
  #    url: https://github.com/ivan-rio/ha_deck_cyd
  #    ref: main
  #  components: [ hd_device_cyd]
  - source:
      type: local
      path: ../components
    components: [ hd_device_cyd ]
  - source:
      type: git
      url: https://github.com/strange-v/ha_deck
      ref: main
    components: [ ha_deck ]

web_server:
  port: 80


# Définition des capteurs de température
sensor:
  - platform: homeassistant
    id: temp_ellie
    entity_id: sensor.temperature_ellie_temperature
  - platform: homeassistant
    id: temp_iris
    entity_id: sensor.temperature_iris_temperature
  - platform: homeassistant
    id: temp_chambre
    entity_id: sensor.t_chambre_temperature
  - platform: homeassistant
    id: temp_bureau
    entity_id: sensor.temperature_bureau_temperature
  - platform: homeassistant
    id: temp_sdb
    entity_id: sensor.t_salle_de_bain_temperature
  - platform: homeassistant
    id: temp_salon
    entity_id: sensor.climatisation_temperature

# Définition des interrupteurs
switch:
  - platform: homeassistant
    id: lampe_tele
    entity_id: switch.sonoff_lampe_tele
  - platform: homeassistant
    id: lampe_lit_iris
    entity_id: switch.sonoff_lumiere_lit_iris
  - platform: homeassistant
    id: prise_ours_iris
    entity_id: switch.sonoff_prise_ours_iris
  - platform: homeassistant
    id: arrosage
    entity_id: switch.sonoff_arrosage
  - platform: homeassistant
    id: chauffage_ellie
    entity_id: switch.shellyplus1pm_chauf_ellie
  - platform: homeassistant
    id: chauffage_iris
    entity_id: switch.shelly_chauffage_iris
  - platform: homeassistant
    id: seche_serviette
    entity_id: switch.sonoff_seche_serviette


time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Paris
    on_time:
      - cron: '* * * * * *'
        then:
          lambda: |-
            char buff[10] = "-";
            auto time = id(sntp_time).now();
            if (time.is_valid())
              sprintf(buff, "%02d:%02d:%02d", time.hour, time.minute, time.second);
            id(local_time).set_value(std::string(buff));

number:
  - platform: template
    id: screen_brightness
    name: Active screen brightness
    min_value: 0
    max_value: 100
    step: 5
    initial_value: 75
    restore_value: true
    set_action:
      - lambda: |-
          if (!id(deck).get_inactivity())
            id(device).set_brightness(x);


output:
  - platform: ledc
    pin: 10
    id: out_10
  - platform: ledc
    pin: GPIO27
    id: backlight

light:
  - platform: monochromatic
    output: backlight
    name: "Display Backlight"
    id: display_light
    gamma_correct: 1.0
    restore_mode: ALWAYS_ON

hd_device_cyd:
  id: device
  brightness: 75

ha_deck:
  id: deck
  main_screen: ${SCREEN_MAIN}
  screens:
    - name: ${SCREEN_MAIN}
      widgets:
        - type: value-card
          id: local_time
          position: 10, 10
          dimensions: 196x105
          text: "Maison des Marmottes"
          enabled: return true;
          on_click:
            lambda: |-
                id(deck).switch_screen("$SCREEN_ROOMS");
        - type: button
          position: 10, 125
          dimensions: 93x105
          text: "Lights"
          icon: 󰝩
          on_click:
            lambda: id(deck).switch_screen("$SCREEN_LIGHTS");
        - type: button
          position: 113, 125
          dimensions: 93x105
          text: "Thermostat"
          icon: 󰢑
          on_click:
            lambda: id(deck).switch_screen("$SCREEN_THERMOSTAT");
        - type: button
          position: 216, 125
          dimensions: 93x105
          text: "Arrosage"
          icon: 󰍛
          toggle: true
          checked: return id(arrosage).state;
          on_turn_on:
            - switch.turn_on: arrosage
          on_turn_off:
            - switch.turn_off: arrosage

    - name: ${SCREEN_LIGHTS}
      widgets:
        - type: button
          position: 10, 10
          text: "Lampe Télé"
          icon: 󰝩
          toggle: true
          checked: return id(lampe_tele).state;
          on_turn_on:
            - switch.turn_on: lampe_tele
          on_turn_off:
            - switch.turn_off: lampe_tele
        - type: button
          position: 120, 10
          text: "Lit Iris"
          icon: 󰝩
          toggle: true
          checked: return id(lampe_lit_iris).state;
          on_turn_on:
            - switch.turn_on: lampe_lit_iris
          on_turn_off:
            - switch.turn_off: lampe_lit_iris
        - type: button
          position: 230, 10
          text: "Ours Iris"
          icon: 󰝩
          toggle: true
          checked: return id(prise_ours_iris).state;
          on_turn_on:
            - switch.turn_on: prise_ours_iris
          on_turn_off:
            - switch.turn_off: prise_ours_iris

    - name: ${SCREEN_TEMPS}
      widgets:
        - type: value-card
          position: 10, 10
          text: "Temp. Ellie"
          value: |-
            char buff[10];
            sprintf(buff, "%.1f°C", id(temp_ellie).state);
            return std::string(buff);
        - type: value-card
          position: 120, 10
          text: "Temp. Iris"
          value: |-
            char buff[10];
            sprintf(buff, "%.1f°C", id(temp_iris).state);
            return std::string(buff);
        - type: value-card
          position: 230, 10
          text: "Temp. Chambre"
          value: |-
            char buff[10];
            sprintf(buff, "%.1f°C", id(temp_chambre).state);
            return std::string(buff);
        - type: value-card
          position: 10, 120
          text: "Temp. Bureau"
          value: |-
            char buff[10];
            sprintf(buff, "%.1f°C", id(temp_bureau).state);
            return std::string(buff);
        - type: value-card
          position: 120, 120
          text: "Temp. SdB"
          value: |-
            char buff[10];
            sprintf(buff, "%.1f°C", id(temp_sdb).state);
            return std::string(buff);
        - type: value-card
          position: 230, 120
          text: "Temp. Salon"
          value: |-
            char buff[10];
            sprintf(buff, "%.1f°C", id(temp_salon).state);
            return std::string(buff);
