substitutions:
  SCREEN_MAIN: master
  SCREEN_LED: led
  SCREEN_HEAT: heat
  SCREEN_TEMP: temperature
  SCREEN_GARDEN: garden
  SCREEN_POWER: power


esphome:
  name: ha-deck-cyd-28
  friendly_name: HA_Deck_CYD_28
  libraries:
    - SPI
    - Wire
    - XPT2046_Touchscreen=https://github.com/PaulStoffregen/XPT2046_Touchscreen.git#v1.4

esp32:
  board: esp32dev
  framework:
    type: arduino
    

logger:

api:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

ota:
  - platform: esphome
    id: my_ota
    password: "Old password"

external_components:
  #- source:
  #    type: git
  #    url: https://github.com/ivan-rio/ha_deck_cyd
  #    ref: main
  #  components: [ hd_device_cyd]
  - source:
      type: local
      path: ../components
    components: [ hd_device_cyd_28 ]
  - source:
      type: git
      url: https://github.com/strange-v/ha_deck
      ref: main
    components: [ ha_deck ]

web_server:
  port: 80


sensor:
#Custom HomeAssistant
  - platform: homeassistant
    id: temp_ellie
    entity_id: sensor.temperature_ellie_temperature
    unit_of_measurement: "°C"
  - platform: homeassistant
    id: temp_iris
    entity_id: sensor.temperature_iris_temperature
    unit_of_measurement: "°C"
  - platform: homeassistant
    id: temp_chambre
    entity_id: sensor.t_chambre_temperature
    unit_of_measurement: "°C"
  - platform: homeassistant
    id: temp_bureau
    entity_id: sensor.temperature_bureau_temperature
    unit_of_measurement: "°C"
  - platform: homeassistant
    id: temp_sdb
    entity_id: sensor.t_salle_de_bain_temperature
    unit_of_measurement: "°C"
  - platform: homeassistant
    id: temp_salon
    entity_id: sensor.climatisation_temperature
    unit_of_measurement: "°C"

  # Power
  - platform: homeassistant
    id: house_power
    entity_id: sensor.house_power_channel_1_power
    unit_of_measurement: "W"
  - platform: homeassistant
    id: solar_power
    entity_id: sensor.production_solaire
    unit_of_measurement: "W"
  - platform: homeassistant
    id: mining_power
    entity_id: sensor.prise_pc_power
    unit_of_measurement: "W"
  - platform: homeassistant
    id: pool_power
    entity_id: sensor.shellyplus1pm_80646fe2e87c_switch_0_power
    unit_of_measurement: "W"
  - platform: homeassistant
    id: heat_pump_power
    entity_id: sensor.house_power_channel_2_power
    unit_of_measurement: "W"
  - platform: homeassistant
    id: desk_power
    entity_id: sensor.prise_bureau_power
    unit_of_measurement: "W"
  - platform: homeassistant
    id: arrosage_power
    entity_id: sensor.sonoff_1000a93832_power
    unit_of_measurement: "W"
  - platform: homeassistant
    id: chauffage_ellie_power
    entity_id: sensor.shellyplus1pm_b0b21c0f5ce4_switch_0_power
    unit_of_measurement: "W"
  - platform: homeassistant
    id: chauffage_iris_power
    entity_id: sensor.shelly_chauffage_iris_switch_0_power
    unit_of_measurement: "W"
  - platform: homeassistant
    id: seche_serviete_power
    entity_id: sensor.sonoff_1000cd59e2_power
    unit_of_measurement: "W"
  - platform: homeassistant
    id: machine_laver_power
    entity_id: sensor.prise_machines_laver_puissance
    unit_of_measurement: "W"
  - platform: homeassistant
    id: lave_vaisselle_power
    entity_id: sensor.sunology_puissance
    unit_of_measurement: "W"


text_sensor:    
#custom
  - platform: homeassistant
    id: lampe_tele_state
    entity_id: switch.sonoff_lampe_tele

  - platform: homeassistant
    id: lit_iris_state
    entity_id: switch.sonoff_lumiere_lit_iris
  - platform: homeassistant
    id: prise_ellie_state
    entity_id: switch.prise_ellie

  - platform: homeassistant
    id: dressing_state
    entity_id: light.led_chambre_parent
  
  - platform: homeassistant
    id: chauffage_ellie_state
    entity_id: switch.shellyplus1pm_chauf_ellie
  - platform: homeassistant
    id: chauffage_iris_state
    entity_id: switch.shelly_chauffage_iris
  - platform: homeassistant
    id: seche_serviette_state
    entity_id: switch.sonoff_seche_serviette
  - platform: homeassistant
    id: arrosage_state
    entity_id: switch.sonoff_arrosage
  - platform: homeassistant
    id: pool_state
    entity_id: switch.shellyplus1pm_80646fe2e87c_switch_0


time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Paris
    on_time:
      - cron: '* * * * * *'
        then:
          lambda: |-
            char buff[10] = "-";
            auto time = id(sntp_time).now();
            if (time.is_valid())
              sprintf(buff, "%02d:%02d:%02d", time.hour, time.minute, time.second);
            id(local_time).set_value(std::string(buff));

number:
  - platform: template
    id: screen_brightness
    name: Active screen brightness
    min_value: 0
    max_value: 100
    step: 5
    initial_value: 100
    restore_value: true
    set_action:
      - lambda: |-
          if (!id(deck).get_inactivity())
            id(device).set_brightness(x);
  - platform: template
    id: inactive_screen_brightness
    name: Inactive screen brightness
    min_value: 0
    max_value: 100
    step: 5
    initial_value: 30
    restore_value: true
    set_action:
      - lambda: |-
          if (id(deck).get_inactivity())
            id(device).set_brightness(x);

output:
  - platform: ledc
    pin: 10
    id: out_10
  - platform: ledc
    pin: GPIO27
    id: backlight

light:
  - platform: monochromatic
    output: backlight
    name: "Display Backlight"
    id: display_light
    gamma_correct: 1.0
    restore_mode: ALWAYS_ON

switch:
#Custom
  - platform: homeassistant
    id: lampe_tele
    entity_id: switch.sonoff_lampe_tele
  - platform: homeassistant
    id: lampe_ellie
    entity_id: switch.prise_ellie
  - platform: homeassistant
    id: lampe_lit_iris
    entity_id: switch.sonoff_lumiere_lit_iris
  - platform: homeassistant
    id: prise_ours_iris
    entity_id: switch.sonoff_prise_ours_iris
  - platform: homeassistant
    id: arrosage
    entity_id: switch.sonoff_arrosage
  - platform: homeassistant
    id: chauffage_ellie
    entity_id: switch.shellyplus1pm_chauf_ellie
  - platform: homeassistant
    id: chauffage_iris
    entity_id: switch.shelly_chauffage_iris
  - platform: homeassistant
    id: seche_serviette
    entity_id: switch.sonoff_seche_serviette
  - platform: homeassistant
    id: dressing
    entity_id: light.led_chambre_parent
  - platform: homeassistant
    id: pool
    entity_id: switch.shellyplus1pm_80646fe2e87c_switch_0

hd_device_cyd_28:
  id: device
  brightness: 100

#script:
#  - id: update_display
#    mode: restart 
#    then:
#      - lvgl.label.update:
#        - id: local_time
#          text: !lambda |-
#            int value = id(housePower).state;
#            if (value < 0) {
#              return (std::string("-") + std::to_string(std::abs(value)) + " W").c_str();
#            } else {
#              return (std::to_string(value) + " W").c_str();
#            }

ha_deck:
  id: deck
  main_screen: ${SCREEN_MAIN}
  inactivity:
    period: 60 # seconds
    #blank_screen: true
  on_inactivity_change:
    lambda:  |-
      if (x) {
        id(device).set_brightness(id(inactive_screen_brightness).state);
      } else {
        id(device).set_brightness(id(screen_brightness).state);
      }
  screens:
    - name: ${SCREEN_MAIN}
      widgets:
        - type: value-card
          id: local_time
          position: 10, 10
          dimensions: 224x100
          enabled: return true;
          text: Marmotte House
          on_click:
            lambda: id(deck).switch_screen("$SCREEN_POWER");

        - type: button
          position: 244, 10
          dimensions: 68x100
          text: "Alarme"
          icon: 󰦝
          toggle: true
          enabled: return true;
          checked: |-
            if(id(lampe_tele_state).state == "on") { return 1; }
            else { return 0; }
          on_turn_on:
            - homeassistant.service:
                service: switch.turn_on
                data:
                  entity_id: switch.sonoff_lampe_tele
            - switch.turn_on: lampe_tele
          on_turn_off:
            - homeassistant.service:
                service: switch.turn_off
                data:
                  entity_id: switch.sonoff_lampe_tele
            - switch.turn_off: lampe_tele

        - type: button
          position: 10, 120
          dimensions: 68x110
          text: "Lumière"
          icon: 󰝩
          enabled: return true;
          on_click:
            lambda: id(deck).switch_screen("$SCREEN_LED");
          on_long_press:
            - logger.log: "Lights long pressed"

        - type: button
          position: 88, 120
          dimensions: 68x110
          text: "Chauf."
          icon: 󰐸
          enabled: return true;
          on_click:
            lambda: |-
                id(deck).switch_screen("$SCREEN_HEAT");

        - type: button
          position: 166, 120
          dimensions: 68x110
          text: "Jardin"
          icon: 󰐅
          enabled: return true;
          on_click:
            lambda: |-
                id(deck).switch_screen("$SCREEN_GARDEN");

        - type: button
          position: 244, 120
          dimensions: 68x110
          text: "Temp."
          icon: 󰽕
          enabled: return true;
          on_click:
            lambda: |-
                id(deck).switch_screen("$SCREEN_TEMP");

    - name: ${SCREEN_LED}
      widgets:
        - type: button
          position: 6, 9
          dimensions: 30x222
          icon: 󰅁
          enabled: return true;
          on_click:
            - lambda: id(deck).switch_screen("$SCREEN_MAIN");

        #- type: slider
        #  position: 80, 8
        #  dimensions: 60x223
        #  text: Screen
        #  min: 0
        #  max: 100
        #  enabled: return true;
        #  value: return id(device).get_brightness();
        #  on_change:
        #    lambda: id(device).set_brightness(x);

        #- type: slider
        #  position: 155, 8
        #  dimensions: 60x165
          #text: "Light 1"
        #  min: 1
        #  max: 255
        #  enabled: return true;
        #  value: |-
        #    if(id(light_01_brightness).state <= 255) { return id(light_01_brightness).state; }
        #    else { return 0; }
        #  on_change:
        #    - homeassistant.service:
        #        service: light.turn_on
        #        data:
        #          entity_id: light.wled_table_2
        #          brightness: !lambda return x;

        - type: button
          position: 46, 9
          dimensions: 68x110
          text: "Lit Iris"
          icon: 󱞓
          toggle: true
          enabled: return true;
          checked: |-
            if(id(lit_iris_state).state == "on") { return 1; }
            else { return 0; }
          on_turn_on:
            - switch.turn_on: lampe_lit_iris
          on_turn_off:
            - switch.turn_off: lampe_lit_iris
            
        - type: button
          position: 124, 9
          dimensions: 68x110
          text: "Ch.Ellie"
          icon: 󱞓
          toggle: true
          enabled: return true;
          checked: |-
            if(id(prise_ellie_state).state == "on") { return 1; }
            else { return 0; }
          on_turn_on:
            - switch.turn_on: lampe_ellie
          on_turn_off:
            - switch.turn_off: lampe_ellie

       
    - name: ${SCREEN_HEAT}
      widgets:
        - type: button
          position: 6, 9
          dimensions: 30x222
          icon: 󰅁
          enabled: return true;
          on_click:
            - lambda: id(deck).switch_screen("$SCREEN_MAIN");

        - type: button
          position: 46, 9
          dimensions: 68x110
          text: "Iris"
          icon: 󰐸
          toggle: true
          enabled: return true;
          checked: |-
            if(id(chauffage_iris_state).state == "on") { return 1; }
            else { return 0; }
          on_turn_on:
            - switch.turn_on: chauffage_iris
          on_turn_off:
            - switch.turn_off: chauffage_iris
        
        - type: button
          position: 124, 9
          dimensions: 68x110
          text: "Ellie"
          icon: 󰐸
          toggle: true
          enabled: return true;
          checked: |-
            if(id(chauffage_ellie_state).state == "on") { return 1; }
            else { return 0; }
          on_turn_on:
            - switch.turn_on: chauffage_ellie
          on_turn_off:
            - switch.turn_off: chauffage_ellie

        - type: button
          position: 202, 9
          dimensions: 68x110
          text: "Seche Serv"
          icon: 󰾦
          toggle: true
          enabled: return true;
          checked: |-
            if(id(seche_serviette_state).state == "on") { return 1; }
            else { return 0; }
          on_turn_on:
            - switch.turn_on: seche_serviette
          on_turn_off:
            - switch.turn_off: seche_serviette
    
    - name: ${SCREEN_TEMP}
      widgets:
        - type: button
          position: 6, 9
          dimensions: 30x222
          icon: 󰅁
          enabled: return true;
          on_click:
            - lambda: id(deck).switch_screen("$SCREEN_MAIN");

        - type: value-card
          id: temp_salon_card
          position: 46, 9
          dimensions: 60x222
          text: Salon
          enabled: return true;
          value: |-
            char buff[10] = "-";
            sprintf(buff, "%.1f", id(temp_salon).state);
            return std::string(buff);

        - type: value-card
          id: temp_bureau_card
          position: 116, 9
          dimensions: 58x106
          text: Bureau
          enabled: return true;
          value: |-
            char buff[10] = "-";
            sprintf(buff, "%.1f", id(temp_bureau).state);
            return std::string(buff);
        - type: value-card
          id: temp_SDB_card
          position: 182, 9
          dimensions: 58x106
          text: S.d.B.
          enabled: return true;
          value: |-
            char buff[10] = "-";
            sprintf(buff, "%.1f", id(temp_sdb).state);
            return std::string(buff);
        - type: value-card
          id: temp_Iris_card
          position: 252, 9
          dimensions: 58x106
          text: Iris
          enabled: return true;
          value: |-
            char buff[10] = "-";
            sprintf(buff, "%.1f", id(temp_iris).state);
            return std::string(buff);
        - type: value-card
          id: temp_ellie_card
          unit: °C
          position: 116, 124
          dimensions: 92x106
          text: Ellie
          enabled: return true;
          value: |-
            char buff[10] = "-";
            sprintf(buff, "%.1f", id(temp_ellie).state);
            return std::string(buff);
        - type: value-card
          id: temp_parent_card
          unit: °C
          position: 218, 124
          dimensions: 92x106
          text: Parents
          enabled: return true;
          value: |-
            char buff[10] = "-";
            sprintf(buff, "%.1f", id(temp_chambre).state);
            return std::string(buff);

    - name: ${SCREEN_POWER}
      widgets:
        - type: button
          position: 6, 9
          dimensions: 30x222
          icon: 󰅁
          enabled: return true;
          on_click:
            - lambda: id(deck).switch_screen("$SCREEN_MAIN");

        # First row (y = 9)
        - type: value-card
          id: house_power_card
          position: 46, 9
          dimensions: 68x110
          text: "House"
          enabled: return true;
          value: |-
            char buff[10] = "-";
            sprintf(buff, "%d", (int)id(house_power).state);
            return std::string(buff);

        - type: value-card
          id: solar_power_card
          position: 124, 9
          dimensions: 68x110
          text: "Solar"
          enabled: return true;
          value: |-
            char buff[10] = "-";
            sprintf(buff, "%d", (int)id(solar_power).state);
            return std::string(buff);

        - type: value-card
          id: mining_power_card
          position: 202, 9
          dimensions: 68x110
          text: "Mining"
          enabled: return true;
          value: |-
            char buff[10] = "-";
            sprintf(buff, "%d", (int)id(mining_power).state);
            return std::string(buff);

        - type: value-card
          id: pool_power_card
          position: 280, 9
          dimensions: 68x110
          text: "Pool"
          enabled: return true;
          value: |-
            char buff[10] = "-";
            sprintf(buff, "%d", (int)id(pool_power).state);
            return std::string(buff);

        # Second row (y = 129 = 9 + 110 + 10)
        - type: value-card
          id: heat_pump_power_card
          position: 46, 129
          dimensions: 68x110
          text: "HeatPump"
          enabled: return true;
          value: |-
            char buff[10] = "-";
            sprintf(buff, "%d", (int)id(heat_pump_power).state);
            return std::string(buff);

        - type: value-card
          id: desk_power_card
          position: 124, 129
          dimensions: 68x110
          text: "Desk"
          enabled: return true;
          value: |-
            char buff[10] = "-";
            sprintf(buff, "%d", (int)id(desk_power).state);
            return std::string(buff);

        - type: value-card
          id: arrosage_power_card
          position: 202, 129
          dimensions: 68x110
          text: "Arrosage"
          enabled: return true;
          value: |-
            char buff[10] = "-";
            sprintf(buff, "%d", (int)id(arrosage_power).state);
            return std::string(buff);

        - type: value-card
          id: chauffage_ellie_power_card
          position: 280, 129
          dimensions: 68x110
          text: "Ch. Ellie"
          enabled: return true;
          value: |-
            char buff[10] = "-";
            sprintf(buff, "%d", (int)id(chauffage_ellie_power).state);
            return std::string(buff);

        - type: value-card
          id: chauffage_iris_power_card
          position: 358, 129
          dimensions: 68x110
          text: "Ch. Iris"
          enabled: return true;
          value: |-
            char buff[10] = "-";
            sprintf(buff, "%d", (int)id(chauffage_iris_power).state);
            return std::string(buff);

        - type: value-card
          id: seche_serviete_power_card
          position: 436, 129
          dimensions: 68x110
          text: "Sèche"
          enabled: return true;
          value: |-
            char buff[10] = "-";
            sprintf(buff, "%d", (int)id(seche_serviete_power).state);
            return std::string(buff);

        - type: value-card
          id: lave_vaisselle_power_card
          position: 514, 129
          dimensions: 68x110
          text: "Vaisselle"
          enabled: return true;
          value: |-
            char buff[10] = "-";
            sprintf(buff, "%d", (int)id(lave_vaisselle_power).state);
            return std::string(buff);

        - type: value-card
          id: machine_laver_power_card
          position: 592, 129
          dimensions: 68x110
          text: "Laver"
          enabled: return true;
          value: |-
            char buff[10] = "-";
            sprintf(buff, "%d", (int)id(machine_laver_power).state);
            return std::string(buff);
    
    - name: ${SCREEN_GARDEN}
      widgets:
        - type: button
          position: 6, 9
          dimensions: 30x222
          icon: 󰅁
          enabled: return true;
          on_click:
            - lambda: id(deck).switch_screen("$SCREEN_MAIN");
        
        - type: button
          position: 46, 9
          dimensions: 80x106
          text: "Arrosage"
          icon: 󱁠
          toggle: true
          enabled: return true;
          checked: |-
            if(id(arrosage_state).state == "on") { return 1; }
            else { return 0; }
          on_turn_on:
            - homeassistant.service:
                service: switch.turn_on
                data:
                  entity_id: switch.sonoff_arrosage
            - switch.turn_on: arrosage
          on_turn_off:
            - homeassistant.service:
                service: switch.turn_off
                data:
                  entity_id: switch.sonoff_arrosage
            - switch.turn_off: arrosage

        - type: button
          position: 136, 9
          dimensions: 80x106
          text: "Piscine"
          icon: 󰘆
          toggle: true
          enabled: return true;
          checked: |-
            if(id(pool_state).state == "on") { return 1; }
            else { return 0; }
          on_turn_on:
            - homeassistant.service:
                service: switch.turn_on
                data:
                  entity_id: switch.shellyplus1pm_80646fe2e87c_switch_0
            - switch.turn_on: pool
          on_turn_off:
            - homeassistant.service:
                service: switch.turn_off
                data:
                  entity_id: switch.shellyplus1pm_80646fe2e87c_switch_0
            - switch.turn_off: pool
